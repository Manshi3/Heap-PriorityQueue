Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0).

The distance between two points on the X-Y plane is the Euclidean distance (i.e., âˆš(x1 - x2)2 + (y1 - y2)2).

class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> ans;
        priority_queue<pair<int, pair<int, int>>> maxh;
        for(int i = 0; i < points.size(); i++) {
            int dist = points[i][0] * points[i][0] + points[i][1] * points[i][1];
            maxh.push({dist, {points[i][0], points[i][1]}});
            if(maxh.size() > k) maxh.pop();
        }
        while(maxh.size() > 0) {
            pair<int, int> p = maxh.top().second;
            ans.push_back({p.first, p.second});
            maxh.pop();
        }
        return ans;
    }
};
